<%@ Template Language="C#" TargetLanguage="C#" Debug="True" Encoding="UTF-8" %>
<%@ Register Name="TreeGridQueryFormView" Template="TreeGrid.QueryFormView.cst" MergeProperties="False" ExcludeProperties="" %>

<%@ Assembly Src="..\..\Common\Model.cs" %>
<%@ Assembly Src="..\..\Common\Extensions.cs" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="SchemaMapper" %>

<%@ Property Name="Entity" Type="SchemaMapper.Entity"  %>
<%@ Property Name="Namespace" Type="System.String" %>
<%-- Safe类名 --%>
<% string SafeClassName = Entity.ClassName.ToSafeName(); %>
<%-- 描述 --%>
<% string Description = Entity.Description; %>
<%-- 如果是树型实体，则调用子模板 --%>
<%
if( Entity.IsTreeEntity() ){
    CodeTemplate template =new TreeGridQueryFormView();
    template.SetProperty("Namespace",Namespace);
    template.SetProperty("Entity",Entity);
    template.Render(this.Response);
    return;
}
%>
@model <%= SafeClassName %>Query
@{
    var x = @Html.EasyUi();
}
<div id="divQuery" class="divQueryForm">
    @using ( x.Form( "formQuery" ).AddClass( "form" ).Begin() ) {
        <dl>
            <dt>@Html.LabelFor( t => t.<%= Entity.GetFirstProperty().PropertyName.ToSafeName() %> )</dt>
            <dd>
                @x.TextBox( t => t.<%= Entity.GetFirstProperty().PropertyName.ToSafeName() %> )
            </dd>
        </dl>
        <span class="button">
            @x.Button( "查 询" ).Width( 70 ).Icon( "icon-search" ).Query()
        </span>
    }
</div>